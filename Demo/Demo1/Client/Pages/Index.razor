@page "/"
@inject HighlightService highlightSrv

<h2> Welcome to Highlight.Blazor</h2>

<h3>1. C# Without Highlight</h3>
<pre style="border:2px solid #0000ff;">
<code>
                private int currentCount = 0;

                private void IncrementCount()
                {
                    currentCount++;
                }
    </code>
</pre>

<h3>2. Set style</h3>
<div>
    <input type="text" @bind-value="styleUrl" style="width:700px" />
</div>

<button class="btn btn-primary" @onclick="ApplyStyle">Apply Style</button>



<h3>3. C# with indent</h3>

<CodeHighlight>
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
</CodeHighlight>


<h3>4. C# without indent</h3>

<CodeHighlight Indent="false">
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }

</CodeHighlight>


<h3>5. Json with indent</h3>

<CodeHighlight Indent="true" CodeLanguage="json">
                {
	                "success": true,
	                "data": [
		                {
			                "billCode": "BSTPU019524859",
			                "type": 1
		                }
	                ]
                }
</CodeHighlight>

<h3>6. highlight with program</h3>

<CodeHighlight Indent=false>@SourceCode</CodeHighlight>

<h3>7. highlight with program and change it</h3>
<CodeHighlight Code=@AnotherCode></CodeHighlight>
<button class="btn btn-primary" @onclick="ChangeCode">Change Code</button>

@code {
    string SourceCode = @"
    public class Aa
    {

    }
";

    string AnotherCode = "public override void init()\n{\n   Backend.Init();\n}";

    private string styleUrl = "https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.3.1/styles/a11y-dark.min.css";

    private async void ApplyStyle()
    {
       await highlightSrv.SetStyleAsync(styleUrl);
    }

    private void ChangeCode()
    {
        Random r = new Random();
        AnotherCode = "public override void init_" + r.Next(0,100) + "()\n{\n   Backend.Init();\n}";
    }

}
